input {
    file {
      type => "workshop"
      path => "/home/konrad/IdeaProjects/elk/src/main/resources/logs/*.log"
      codec => multiline {
        pattern => "^%{TIMESTAMP_ISO8601:timestamp}"
        negate => "true"
        what => "previous"
        auto_flush_interval => 1
      }
    }
}

filter {
   grok {
      match => [ "message", "(?m)%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:level} %{NUMBER:pid} --- \[(?<thread>[A-Za-z0-9-]+)\] [A-Za-z0-9.]*\.(?<class>[A-Za-z0-9#_]+)\s*:\s+(?<logmessage>.*)"]
    }

    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
    }
}

output {
    if [level] in ["WARN","ERROR"] {
      stdout {
          codec => rubydebug
      }

      file {
        path => "/home/konrad/IdeaProjects/elk/logstash/output/filtered-logs"
      }

      elasticsearch {
          hosts => ["localhost:9200"]
      }
    }
}
